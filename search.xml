<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[10PAT(乙级) 61. 判断题(15)5)]]></title>
      <url>%2F2017%2F04%2F17%2F10PAT-%E4%B9%99%E7%BA%A7-61-%E5%88%A4%E6%96%AD%E9%A2%98-15-5%2F</url>
      <content type="text"><![CDATA[题解。 题目描述：判断题的评判很简单，本题就要求你写个简单的程序帮助老师判题并统计学生们判断题的得分。 输入格式：输入在第一行给出两个不超过100的正整数N和M，分别是学生人数和判断题数量。第二行给出M个不超过5的正整数，是每道题的满分值。第三行给出每道题对应的正确答案，0代表“非”，1代表“是”。随后N行，每行给出一个学生的解答。数字间均以空格分隔。 输出格式：按照输入的顺序输出每个学生的得分，每个分数占一行。 输入样例：1234563 62 1 3 3 4 50 0 1 0 1 10 1 1 0 0 11 0 1 0 1 01 1 0 0 1 1 输出样例：123131112 题解：1234567891011121314151617181920212223242526#include &lt;iostream&gt;using namespace std;int main()&#123; int n, m; cin &gt;&gt; n &gt;&gt; m; //输入分值 int value[100]; for (int i = 0; i &lt; m; i++) cin &gt;&gt; value[i]; //输入标准答案 int stdAns[100]; for (int i = 0; i &lt; m; i++) cin &gt;&gt; stdAns[i]; //输入学生答案并输出成绩 for (int i = 0; i &lt; n; i++) &#123; int total = 0; for (int j = 0; j &lt; m; j++) &#123; int opt; cin&gt;&gt;opt; if (opt == stdAns[j]) total += value[j]; &#125; cout&lt;&lt;total&lt;&lt;endl; &#125; return 0;&#125; 心得： 弱鸡还没学会使用STL，幸好这道题能开大数组。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[PAT(乙级) 1066. 图像过滤(15)]]></title>
      <url>%2F2017%2F04%2F16%2FPAT-%E4%B9%99%E7%BA%A7-1066-%E5%9B%BE%E5%83%8F%E8%BF%87%E6%BB%A4-15%2F</url>
      <content type="text"><![CDATA[题解。 题目描述：图像过滤是把图像中不重要的像素都染成背景色，使得重要部分被凸显出来。现给定一幅黑白图像，要求你将灰度值位于某指定区间内的所有像素颜色都用一种指定的颜色替换。 输入格式：输入在第一行给出一幅图像的分辨率，即两个正整数M和N（0 &lt; M, N &lt;= 500），另外是待过滤的灰度值区间端点A和B（0 &lt;= A &lt; B &lt;= 255）、以及指定的替换灰度值。随后M行，每行给出N个像素点的灰度值，其间以空格分隔。所有灰度值都在[0, 255]区间内。 输出格式：输出按要求过滤后的图像。即输出M行，每行N个像素灰度值，每个灰度值占3位（例如黑色要显示为000），其间以一个空格分隔。行首尾不得有多余空格。 输入样例：3 5 100 150 03 189 254 101 119150 233 151 99 10088 123 149 0 255 输出样例：003 189 254 000 000000 233 151 099 000088 000 000 000 255 题解：1234567891011121314151617#include &lt;cstdio&gt;int main()&#123; int m, n, a, b, num, raw; scanf("%d%d%d%d%d", &amp;m, &amp;n, &amp;a, &amp;b, &amp;num); for (int i = 0; i &lt; m; i++) &#123; for (int j = 0; j &lt; n; j++) &#123; scanf("%d", &amp;raw); if (raw &gt;= a &amp;&amp; raw &lt;= b) raw = num; if (j != 0) printf(" "); printf("%03d", raw); &#125; printf("\n"); &#125; return 0;&#125; 心得：数组必须要用常数来定义，而这个题无法预知数组大小，但同时可以抛开数组采用“输入-处理-输出”的方法，不做中间保存。 另外这道题可以先根据条件开辟一个大数组，然后“输入-保存-处理-输出”]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[编程语言入门汇总]]></title>
      <url>%2F2017%2F04%2F15%2F%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[Python、C语言、C++、Java 的入门。 Python如果你之前没接触过编程，那么以Python上手无疑是最好的。 零基础入门: 廖雪峰的Python教程 这个教程是大家口口相传的良心入门资料，经过群众检验的好东西~ Udacity的CS入门课 ​ C语言 零基础入门: 计算导论与C语言基础 C程序设计进阶 PKU李戈教授在Coursea上的课程，可以说李老师是我看过所有MOOC中讲课最精彩的。富有激情，生动有趣，总能把知识点讲解透彻。另外，李戈老师在PKU的课程录像放在了北大公开课，相比慕课版有不少学生的讨论的环节。 C语言程序设计 : 现代方法 哈佛、麻省理工、斯坦福的C语言教材。比《C Primer Plus》生动些。 经典必看: C程序设计语言 : 第 2 版·新版 俗称K&amp;R，C语言之父的作品。不适合入门，但入门之后必看。 C++ 零基础入门: C++程序设计（原书第3版） 这本书是很多学校的教材。作者梁勇，美国教授，他编写的教材特点是适合初学者。 如果你嫌看书枯燥，那么以此书为上课教材的 北邮C++程序设计(网易云课堂) 可搭配食用 C++ Primer（第 5 版） 如果你之前有过C语言基础，那么这本全明星阵容的经典适合你。读完这本你就入门了！ Java 零基础入门：Java核心技术·卷Ⅰ 对比了网上推荐的众多经典书籍，我选定了这本作为我的入门教材。目前出到了第10版，基于 Java 8 ，非常新，面向零基础。 经典必看：Java编程思想 如果想深入理解Java面向对象的思想，这本书不可或缺。 Android方向：第一行代码：Android（第2版） : Android]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[openCV学习笔记]]></title>
      <url>%2F2017%2F04%2F10%2Fopencv%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
      <content type="text"><![CDATA[整理学习openCV过程中重要的知识点。 openCV中的helloworld程序123456789#include &lt;opencv2/opencv.hpp&gt;using namespace cv;int main()&#123; Mat img = imread("1.jpg"); imshow("原图", img); waitKey(); return 0;&#125; 首先前两行属于固定开头，这个写法是最简洁的。 opencv.hpp 中包含了opencv全部的库文件声明，不必再include其他头文件。而命名空间cv不必多说。 Mat是openCV中的数据结构，用于保存图像。 imread()函数，原型如下 1Mat imread(const string&amp; filename, int flags=1 ); ​第一个参数是文件名。第二个参数是载入标识，默认为1，标识载入三通道的彩色图像。也可取其他值比如：0-将图像转换成灰度返回 imshow()函数,原型如下 1void imshow(const string&amp; winname, InputArray mat); 第一个参数是窗口名。第二个参数填需要显示的图像 waitKey()函数 保持图片窗口显示，直到任意按键按下。 视频的读取与播放12345678910111213141516#include &lt;opencv2\opencv.hpp&gt; using namespace cv; int main() &#123; VideoCapture capture("1.avi"); while(1) &#123; Mat frame; capture&gt;&gt;frame; if (frame.empty()) break; imshow("读取视频",frame); waitKey(30); &#125; return 0; &#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[VS2017与openCV3的安装]]></title>
      <url>%2F2017%2F04%2F10%2FVS2017%E4%B8%8EopenCV3%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
      <content type="text"><![CDATA[Windows 10 下配置openCV3 下载我这里下的是 VS2017社区版，对我来说够用了。 openCV 3.2.0 版本：下载地址 。自己选择安装目录，下面使用\opencv 代表你自己的目录。 配置我的电脑是64位的，我就按照64位来说。 添加环境变量此电脑右键&gt;属性&gt;高级系统设置&gt;环境变量&gt;选中Path编辑&gt;在变量值末尾增加\openCV\build\x64\vc14\bin 如下图所示，按红色序号来 配置动态链接库就是一步简单的复制粘贴： 找到 \opencv\build\x64\vc14\lib\ 目录，将文件全部选中，拷贝至c:\Windows\SysWOW64 文件夹下 工程目录配置在VS2017中新建空项目，x86改为x64，debug模式。进入属性窗口，如下： 包含目录在包含目录中添加如下内容(注意自己的opencv目录) 库目录在库目录下添加如下内容 附加依赖项找到链接器&gt;输入，在附加依赖项中添加如下内容 测试新建项目，输入下面这段代码，注意在项目目录里放图片= = 123456789#include &lt;opencv2/opencv.hpp&gt;using namespace cv;int main()&#123; Mat img = imread("1.jpg"); imshow("原图", img); waitKey(); return 0;&#125; 按Ctrl+F5运行。如果成功的话会看到如下窗口 恭喜你，安装成功，开始下一步的学习吧~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[优秀博客推荐]]></title>
      <url>%2F2017%2F03%2F30%2F%E4%BC%98%E7%A7%80%E5%8D%9A%E5%AE%A2%E6%8E%A8%E8%8D%90%2F</url>
      <content type="text"><![CDATA[本文推荐我所知道的优秀个人博客，主要是CS领域的名人或学生。 刘未鹏 | Mindhacks 他写过一本关于心智成长的书《暗时间》特别好，是他博文的选录。他向我们展示了一个普通人在某一领域钻研能成为什么样子，从C++到思维再到现在的养娃，认真态度总能帮他取得一些成绩。 如果你想开始写博客，建议你读一下这篇 为什么你应该（从现在开始就）写博客 如果你是一名大学生，你应该能从这篇 我在南大的七年 中得到启发 小土刀 | wdxtub 我是通过搜CSAPP找到的，博主技术范围涉猎较广，读书特别多，也乐意分享，是我心中的大牛~~ 如果你在钻研《深入理解计算机系统》这本书，那么他的 读薄 CSAPP 和 读厚 CSAPP 系列也许能作为参考 (未完)]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Liunx入门汇总]]></title>
      <url>%2F2017%2F03%2F29%2FLiunx%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[小白如何入门Linux，请听另一位小白怎么说。 Knowledge 先听故事 打开网易云音乐，搜索电台’软件那些事儿’ 。可以找到一个Linux的系列，先听一下林纳斯是怎样写出Linux来的吧 通俗入门: 《Linux入门很简单》 这是我看过的Linux的第一本书，很薄，两天可以看完，从书中可以学到一些文件系统、apt、shell、make等一些简单知识，语言比较调皮，不会枯燥。 再次入门: 《Linux命令行大全》 也是零基础可看，能学到命令行的许多知识。 别的我还没看过，等我看了再告诉你~~听说鸟哥的书不错，嘿嘿 Practice如果你不喜欢麻烦的安装，可以先使用Deepin作为过渡，这是国人做的Linux发行版，UI比较好看，我现在当成主力OS来用，还在探索中。你可以到 这里 下载。像装一个小软件一样安装Deepin系统~~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[计算机网络入门汇总]]></title>
      <url>%2F2017%2F03%2F29%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[网络好复杂啊，有没有比较平滑温和的学习路径呢 超入门读物，2017新出炉的日本科普书 《网络是怎样连接的》 绝对是最合适的入门书！！ 经典教材： Kurose的 《自顶向下方法》 被很多人推荐，据说比特南鲍姆那本要好。 谢希仁的 《计算机网络》 已经出到第七版，考研指定参考书，评价不错]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[计算机系统入门汇总]]></title>
      <url>%2F2017%2F03%2F29%2F%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[组成原理与操作系统。 《深入理解计算机系统》 卡耐基梅隆大学的计算机导论课教材，出自CS系主任之手，知识点涉及汇编、操作系统、组成原理、编译原理。 计算机组成与设计 软件/硬件接口 美国经典教材 考研的同学： 计算机系统基础(一)：程序的表示、转换与链接 计算机系统基础（二）：程序的执行和存储访问 南大袁春风老师的课，一定要看，因为她是408命题组组长（逃]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[数据结构与算法入门汇总]]></title>
      <url>%2F2017%2F03%2F29%2F%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[Programs = Data Structure + Algorithm 面向学习： 清华邓俊辉的数据结构 估计是中文资料中最好的数据结构MOOC。 浙大陈越姥姥的数据结构 面向考试： 《数据结构高分笔记》 购买链接请关注率辉学长的公众号：shuaihui_ds 率辉学长为18考研出了专栏，已经开始更新了，在他的公众号里 面向Java程序员： 算法第4版 (Ps:作者是高德纳的学生) 应该是最好的选择 同时配合Coursera上普林斯顿的课程，直接打通。 面向天才： 计算机程序设计艺术（第1卷） : 基本算法 算法导论（原书第3版） 实战： CS界的托福考试 PAT ，考好会有名企通知面试- -（Ps：牛客网有优惠券活动，能减50元报名费） 算法笔记 江湖人称晴神宝典的PAT上机指南，刷两遍书，PAT甲级能考满分]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[大学数学学习资源推荐]]></title>
      <url>%2F2017%2F03%2F29%2F%E5%A4%A7%E5%AD%A6%E6%95%B0%E5%AD%A6%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%8E%A8%E8%8D%90%2F</url>
      <content type="text"><![CDATA[微积分、线性代数、概率论与数理统计。 微积分 浙大名师苏德矿的课堂录制版，非常详细 地址 线性代数 MIT的线性代数，Gilbert Strang 讲授，非常非常好。网易公开课和B站 有中文字幕，还有习题课的视频 概率论与数理统计 如果是计算机专业的同学，那么南京大学的概率论MOOC一定不能错过~]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Web前端入门汇总]]></title>
      <url>%2F2017%2F03%2F29%2FWeb%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[Web前端三剑客：HTML、CSS 和 JavaScript 。怎样入门 零基础超入门: ​ Head First HTML与CSS（第2版） ​ JavaScript DOM编程艺术 （第2版） 发现一个灰常好的英文资料，涵盖了前端的方方面面，而且每年更新：Front-End Developer Handbook 2017]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[A+B输入输出练习]]></title>
      <url>%2F2017%2F03%2F28%2Fcodeup%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0%2F</url>
      <content type="text"><![CDATA[A+B的格式化输入输出，是最基本的练习。 本文给出 codeup上 A+B输入输出练习 关键代码 1000 123while(scanf("%d%d",&amp;a,&amp;b) != EOF)&#123; printf("%d\n", a+b); &#125; 1001 12345scanf("%d",&amp;n); while(n--)&#123; scanf("%d%d",&amp;a,&amp;b); printf("%d\n",a+b); &#125; 1002 12345scanf("%d %d",&amp;a,&amp;b);while((a!=0)||(b!=0))&#123; printf("%d\n", a+b); scanf("%d %d",&amp;a,&amp;b);&#125; 1003 123456789101112131415#include &lt;cstdio&gt;int main()&#123; int N = 0; scanf("%d",&amp;N); while(N!=0)&#123; int sum = 0, num = 0; //使用变量num接收N个数相加 for(int i=0;i&lt;N;i++)&#123; scanf("%d",&amp;num); sum+=num; &#125; printf("%d\n",sum); scanf("%d",&amp;N); &#125; return 0;&#125; 1004 123456789101112131415#include &lt;cstdio&gt;int main()&#123; int N = 0, M = 0; scanf("%d",&amp;N); for(int i=0;i&lt;N;i++)&#123; scanf("%d",&amp;M); int sum = 0,num = 0; for(int j=0;j&lt;M;j++)&#123; scanf("%d",&amp;num); sum += num; &#125; //算出此行的和 printf("%d\n",sum); &#125; //打印出所有行的和 return 0;&#125; 1005 1234567891011121314#include &lt;cstdio&gt; int main()&#123; int N = 0; //关键点在于结束判定 while(scanf("%d",&amp;N) != EOF)&#123; int sum = 0, num = 0; for(int i=0;i&lt;N;i++)&#123; scanf("%d", &amp;num); sum += num; &#125; printf("%d\n",sum); &#125; return 0; &#125; 1006 12345678#include &lt;cstdio&gt;int main()&#123; int a=0,b=0; while(scanf("%d %d",&amp;a,&amp;b) != EOF)&#123; printf("%d\n\n", a+b); &#125;return 0;&#125; 1007 123456789101112131415#include &lt;cstdio&gt;int main()&#123; int N = 0, M = 0; scanf("%d",&amp;N); for(int i=0;i&lt;N;i++)&#123; scanf("%d",&amp;M); int sum = 0,num = 0; for(int j=0;j&lt;M;j++)&#123; scanf("%d",&amp;num); sum += num; &#125; //算出此行的和 printf("%d\n\n",sum); //比1004多了一个\n &#125; //打印出所有行的和 return 0;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[在Deepin操作系统下安装openCV]]></title>
      <url>%2F2017%2F03%2F28%2F%E5%9C%A8Deepin%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8B%E5%AE%89%E8%A3%85openCV%2F</url>
      <content type="text"><![CDATA[在国产Linux发行版Deepin上使用openCV。 装系统Deepin是一个国产的linux发行版，因为其极高的颜值和不需要折腾的操作吸引了我。正好厌倦了windows 10，又赶上大四的毕业设计，就拿来玩玩了。首先,Deepin系统的安装是非常傻瓜式的，参照官网上的教程 几步就可装好。我采用的是体验安装，重启之后即可选择进入Deepin系统。 配置IDE写Python的应该都知道JetBrain家族的PyCharm好用,而这个家族的IDE们风格一致,使用体验好,所以C++也用他家的Clion吧。//如果是学生的话可以通过认证来获得免费的专业版许可证，实在良心。Deepin的深度商店里是Clion的，然鹅不是最新版，所以最好在官网 下载,然后解压缩，找到Clion.sh文件双击运行开始安装。//这里会出现一个问题，由于CLion是使用CMake Toolchain来编译，安装时会提示C++ Complier: not found 。解决方案为，在终端输入指令 sudo apt-get install g++，等待安装完成即可。 安装openCV下载官网下载：http://opencv.org/downloads.html 选择opencv3.2.0 linux 然后解压缩 安装依赖安装编译opencv的一些依赖 12345sudo apt-get install build-essentialsudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-devsudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev 进入opencv3.2.0文件夹（cd ~/opencv-3.1.0）执行： 123mkdir buildcd build 配置opencv文件12345cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..sudo makesudo make install 这样opencv3.2.0 就安装成功了 参考资料1]https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=44751&amp;highlight=clion2]https://bbs.deepin.org/forum.php?mod=viewthread&amp;tid=43127&amp;extra=]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Git入门汇总]]></title>
      <url>%2F2017%2F03%2F28%2FGit%E5%85%A5%E9%97%A8%E6%B1%87%E6%80%BB%2F</url>
      <content type="text"><![CDATA[最先进的分布式版本控制系统。 零基础超入门： ​ 文字教程：廖雪峰的Git教程 ​ 视频教程：如何使用 Git 和 GitHub]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我是怎样搭建这个博客的]]></title>
      <url>%2F2017%2F03%2F27%2F%E6%88%91%E6%98%AF%E6%80%8E%E6%A0%B7%E6%90%AD%E5%BB%BA%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%9A%84%2F</url>
      <content type="text"><![CDATA[从零开始，一步一步搭建出属于自己的静态博客。（未写完 ~注意~过程中可能会有报错，请不要放弃，多使用搜索引擎搜索报错信息。本人是在第四次尝试时才搭建成功，最后一次捣鼓了一整天终于弄好。所以坚持下去，你也会有自己的博客~ 准备工作注册Github 注册个人账号 创建一个新仓库，并命名为：你的用户名.github.io 环境安装 安装Node.js 安装Git 打开Git Bash，输入 123git config --global user.name &quot;你的github用户名&quot;git config --global user.email &quot;你的github注册邮箱&quot; 安装Hexo 1npm install -g hexo-cli 博客初始化 选择你的保存路径，打开命令行（这里推荐windows下的Cmder），输入 1hexo init blog 成功后，输入 1hexo g 这一步是使用hexo生成博客，不过还在本地。 （可选）在本地预览博客效果 1hexo d 会提示你可以浏览http://localhost:4000/ 查看 部署到github 意思就是上传到github上托管 主题设置hexo官网 挑选喜欢的主题 想要设置我这个主题的请看 这篇 发表文章在cmd中切换到hexo目录，输入 1hexo n 你的文章名字 然后用文件管理器打开 hexo安装目录\source\_post找到新建的MD文件，使用Markdown语法进行写作 注意文档头的设置信息，可选项有标题、时间、分类、标签、是否开启目录、是否开放评论。 (这里推荐Windows下一款Markdown编辑器Typora，灰常好用。 保存完成后在命令行输入 1hexo g -d 这是生成并部署的简写。刷新你的页面，就可以看到更新了~ (可选)安装插件评论组件可选的的有网易云跟帖、友言等 流量统计可以使用百度统计 绑定域名参考链接Hexo教程https://zhuanlan.zhihu.com/p/25471760 主题教程https://www.haomwei.com/technology/maupassant-hexo.html]]></content>
    </entry>

    
  
  
</search>
